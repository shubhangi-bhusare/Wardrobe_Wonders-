package com.app.service;

import java.util.List;
import java.util.stream.Collectors;

import javax.transaction.Transactional;

import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.app.dto.ApiResponse;
import com.app.dto.UserDto;
import com.app.entities.User;
import com.app.exceptions.ResourceNotFoundeException;
import com.app.repository.UserRepository;
@Service
@Transactional
public class UserServiceImpl implements UserService {
	@Autowired
	private UserRepository repo;
	@Autowired
	private ModelMapper mapper;

	@Override
	public List<UserDto> getAllUsers() {
		
		return repo.findAll()
				.stream()
				.map(user->mapper.map(user,UserDto.class))
				.collect(Collectors.toList());
	}

	@Override
	public UserDto addNewUser(UserDto userdto) {
		User userEntity=mapper.map(userdto, User.class);//DTO to entity
		User saveUser=repo.save(userEntity);//save entity
		return mapper.map(saveUser,UserDto.class);//entity to dto
	}

	@Override
	public ApiResponse deleteUser(long userid) throws ResourceNotFoundeException {
		User delUser=repo.findById(userid)
				.orElseThrow(()->new ResourceNotFoundeException("Invalid User Id!!!"));
		 repo.delete(delUser);
		 return new ApiResponse("User with id"+delUser.getId()+"deleted!!");
				
	}

}
